"use client";

import { gql } from "@/app/__generated__";
import { useQuery } from "@apollo/client";
import { useParams } from "next/navigation";

const GET_ALBUM = gql(/* GraphQL */ `
  query GetAlbum($id: Int!) {
    album(id: $id) {
      title
      creator {
        name
      }
      photos {
        id
        title
        url
      }
    }
  }
`);

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/doDgdztmTsM
 */
export default function AlbumDetailPage() {
  const { albumId } = useParams();
  const { data } = useQuery(GET_ALBUM, {
    variables: {
      id: Number(albumId),
    },
  });

  if (!data) return <Skeleton />;

  return (
    <div className="p-4 md:p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold">{data.album?.title}</h1>
        <h2 className="text-lg text-zinc-500 dark:text-zinc-400">
          By {data.album?.creator.name}
        </h2>
      </div>
      <section className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
        {data.album?.photos.map((photo) => (
          <div
            key={photo.id}
            className="relative group overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:scale-105"
          >
            <img
              alt="Photo 1"
              className="object-cover w-full h-full transition-transform duration-300 ease-in-out group-hover:scale-105"
              height="300"
              src={photo.url}
              style={{
                aspectRatio: "300/300",
                objectFit: "cover",
              }}
              width="300"
            />
            <div className="absolute bottom-0 left-0 w-full bg-black bg-opacity-60 text-white text-center py-2">
              {photo.title}
            </div>
          </div>
        ))}
      </section>
    </div>
  );
}

/**
 * v0 by Vercel.
 * @see https://v0.dev/t/V5nMcW4HM92
 */
function Skeleton() {
  return (
    <div className="p-4 md:p-6 animate-pulse">
      <div className="mb-8">
        <h1 className="text-3xl font-bold bg-gray-300 dark:bg-gray-700 rounded w-1/2 h-8" />
        <h2 className="text-lg bg-gray-300 dark:bg-gray-700 rounded w-1/4 h-6 mt-2" />
      </div>
      <section className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
        <div className="relative overflow-hidden rounded-lg shadow-lg">
          <div className="bg-gray-300 dark:bg-gray-700 w-full h-64" />
          <div className="absolute bottom-0 left-0 w-full bg-black bg-opacity-60 rounded h-8" />
        </div>
        <div className="relative overflow-hidden rounded-lg shadow-lg">
          <div className="bg-gray-300 dark:bg-gray-700 w-full h-64" />
          <div className="absolute bottom-0 left-0 w-full bg-black bg-opacity-60 rounded h-8" />
        </div>
        <div className="relative overflow-hidden rounded-lg shadow-lg">
          <div className="bg-gray-300 dark:bg-gray-700 w-full h-64" />
          <div className="absolute bottom-0 left-0 w-full bg-black bg-opacity-60 rounded h-8" />
        </div>
        <div className="relative overflow-hidden rounded-lg shadow-lg">
          <div className="bg-gray-300 dark:bg-gray-700 w-full h-64" />
          <div className="absolute bottom-0 left-0 w-full bg-black bg-opacity-60 rounded h-8" />
        </div>
      </section>
    </div>
  );
}
