"use client";

import { gql } from "@/app/__generated__";
import { useQuery } from "@apollo/client";
import Link from "next/link";
import { useParams } from "next/navigation";

const GET_USER = gql(/* GraphQL */ `
  query GetUser($id: Int!) {
    user(id: $id) {
      name
      username
      email
      website
      company {
        name
      }
      address {
        city
      }
      posts(first: 3) {
        totalCount
        edges {
          node {
            id
            title
            body
          }
        }
      }
      albums(first: 3) {
        id
        title
        photos(first: 1) {
          url
        }
      }
    }
  }
`);

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/M35pLqUuMim
 */
export default function UserDetailPage() {
  const { userId } = useParams();
  const { data } = useQuery(GET_USER, {
    variables: {
      id: Number(userId),
    },
  });
  return (
    <div className="px-4 py-6 md:px-6 lg:py-16 md:py-12">
      <div className="grid gap-6 lg:gap-12 items-start max-w-6xl px-4 mx-auto py-6">
        <div className="space-y-4">
          {!data ? (
            <div>
              <div className="h-10 bg-zinc-300 dark:bg-zinc-700 rounded" />
              <div className="space-y-4 mt-4">
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-3/4" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-2/3" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-3/4" />
              </div>
            </div>
          ) : (
            <div>
              <h1 className="text-4xl font-bold">{data?.user?.name}</h1>
              <p className="text-zinc-500 dark:text-zinc-400">
                Username: {data?.user?.username}
              </p>
              <p className="text-zinc-500 dark:text-zinc-400">
                Email: {data?.user?.email}
              </p>
              <p className="text-zinc-500 dark:text-zinc-400">
                Website: {data?.user?.website}
              </p>
              <p className="text-zinc-500 dark:text-zinc-400">
                Company: {data?.user?.company?.name}
              </p>
              <p className="text-zinc-500 dark:text-zinc-400">
                Address: {data?.user?.address?.city}
              </p>
            </div>
          )}
          <h2 className="text-3xl font-bold">
            Posts
            {data?.user?.posts.totalCount && (
              <span>({data.user.posts.totalCount})</span>
            )}
          </h2>
          {!data && (
            <div className="space-y-4 mt-4">
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-3/4 mt-4" />
              </div>
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-3/4 mt-4" />
              </div>
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-4 bg-zinc-300 dark:bg-zinc-700 rounded w-3/4 mt-4" />
              </div>
            </div>
          )}
          <div className="space-y-4">
            {data?.user?.posts.edges.map(({ node: post }) => (
              <Link key={post.id} href={`/posts/${post.id}`}>
                <div className="border p-4 rounded-lg">
                  <h2 className="font-bold text-xl">{post.title}</h2>
                  <p className="text-zinc-500 dark:text-zinc-400">
                    {post.body}
                  </p>
                </div>
              </Link>
            ))}
          </div>
        </div>
        <div className="space-y-4">
          <h2 className="text-3xl font-bold">Albums</h2>
          {!data && (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-60 bg-zinc-300 dark:bg-zinc-700 rounded mt-4" />
              </div>
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-60 bg-zinc-300 dark:bg-zinc-700 rounded mt-4" />
              </div>
              <div className="border p-4 rounded-lg">
                <div className="h-6 bg-zinc-300 dark:bg-zinc-700 rounded w-1/2" />
                <div className="h-60 bg-zinc-300 dark:bg-zinc-700 rounded mt-4" />
              </div>
            </div>
          )}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            {data?.user?.albums.map((album) => (
              <Link key={album.id} href={`/albums/${album.id}`}>
                <div className="border p-4 rounded-lg">
                  <h2 className="font-bold text-xl">{album.title}</h2>
                  <img
                    alt="Album Image"
                    className="aspect-square object-cover border border-zinc-200 w-full rounded-lg overflow-hidden dark:border-zinc-800"
                    height={600}
                    src={album.photos[0]?.url}
                    width={600}
                  />
                </div>
              </Link>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}
